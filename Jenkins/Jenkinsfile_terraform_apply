pipeline{ 
    agent any
    
     environment {
        TOKEN = credentials('telegramToken')
        CHAT_ID = credentials('telegramChatId')
        GOOGLE_CREDENTIALS = credentials('gcp-service-account')
    }

    stages{ 
		stage('Git Checkout') {
			steps {
				git branch: 'GEO-6-Setup-initial-Jenkins-pipelines', url: 'https://github.com/gazpacho-cloud/geocit-cloud-infrastructure'
				}
		}

        stage('Copy Credentials') {
            steps {
                withCredentials([file(credentialsId: 'gcp-service-account', variable: 'GCP_SA_KEY')]) {
                    sh 'export GOOGLE_APPLICATION_CREDENTIALS="$GCP_SA_KEY"'
                }
            }
        }

		stage('Terraform Init') {
            steps {
                sh 'terraform -chdir=terraform init'
            }
        }

        stage('Terraform Plan') {
            steps {
                sh 'terraform -chdir=terraform plan -out=plan.tfout -no-colour'
            }
        }

        stage('Terraform Apply') {
            steps {
                sh 'terraform apply -chdir=terraform plan -auto-approve plan.tfout -no-colour'
            }
        }
    }
    post {
        always {
            cleanWs()
        }
        success {
            script{
                sh "curl --location --request POST 'https://api.telegram.org/bot${TOKEN}/sendMessage' --form text='Build ${env.JOB_NAME} is successful: ${env.BUILD_URL}' --form chat_id='${CHAT_ID}'"
            }
        }
        failure {
            script{
                sh "curl --location --request POST 'https://api.telegram.org/bot${TOKEN}/sendMessage' --form text='Build ${env.JOB_NAME} failed: ${env.BUILD_URL}' --form chat_id='${CHAT_ID}'"
            }
        }
    }
}