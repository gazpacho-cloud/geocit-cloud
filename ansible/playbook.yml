---
- name: deploy Geocitizen app
  hosts: localhost
  gather_facts: yes
  become: yes
  pre_tasks:
    - name: auth with GCloud
      shell: |
        gcloud auth activate-service-account --key-file /path/to/your/service-account-key.json  
      when: not ansible_check_mode

    - name: get secret version for my-new-secret
      command: gcloud secrets versions access latest --secret="my-new-secret"
      register: secret_content

    - name: Parse secret JSON for my-new-secret
      set_fact:
        credentials: "{{ secret_content.stdout | from_json }}"

    - name: load inventory
      set_fact:
        db_host: "{{ credentials.db_ip }}:5432"
        db_name: "{{ credentials.db_name }}" 
        db_username: "{{ credentials.db_username }}" 
        db_password: "{{ credentials.db_password }}" 
        app_ip: "{{ credentials.app_ip }}"
        smtp_username: "{{ credentials.smtp_username }}"
        smtp_password: "{{ credentials.smtp_password }}"
        map_api_key: "{{ credentials.map_key }}"

    - name: Copy repository
      git:
        repo: https://github.com/gazpacho-cloud/geocit.git
        dest: /geocit
        force: yes

    - name: Change configuration for DB
      replace:
        path: /geocit/src/main/resources/application.properties
        regexp: 'localhost:5432'
        replace: "{{ db_host }}"

    - name: Change configuration for front-end
      replace:
        path: /geocit/src/main/resources/application.properties
        regexp: 'http://localhost:8080'
        replace: "https://{{ app_ip }}:443"

    - name: Change configuration in application.properties
      lineinfile:
        path: /geocit/src/main/resources/application.properties
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      loop:
        - { regexp: '^db\.url=', line: 'db.url=jdbc:postgresql://{{ db_host }}/{{ db_name }}' }
        - { regexp: '^db\.username=', line: 'db.username={{ db_username }}' }
        - { regexp: '^db\.password=', line: 'db.password={{ db_password }}' }
        - { regexp: '^email\.username=', line: 'email.username={{ smtp_username }}' }
        - { regexp: '^email\.password=', line: 'email.password={{ smtp_password }}' }
        - { regexp: '^map\.key=', line: 'map.key={{ map_api_key }}' }

    - name: Change configuration in js
      replace:
        path: /geocit/src/main/webapp/static/js/app.6313e3379203ca68a255.js
        regexp: 'http://localhost:8080'
        replace: "https://{{ app_ip }}:443"

  roles:
    - maven
    - tomcat

- name: Install PostgreSQL and setup database
  hosts: db_server
  become: yes
  become_method: sudo

  vars:
    postgresql_version: "14"
    postgresql_user: "postgres"
    postgresql_password: "postgres"
    postgresql_db: "ss_demo_1"

  roles:
    - postgres 

  handlers:
    - name: Restart PostgreSQL
      service:
        name: postgresql
        state: restarted
  
- name: deploy monitoring stack
  hosts: monitoring_instances
  become: yes

  roles:
    - grafana
    - prometheus

- name: deploy jfrog
  hosts: jfrog
  become: yes
  vars:
    jfrog_home: "/opt/jfrog"
    artifactory_image: "releases-docker.jfrog.io/jfrog/artifactory-oss:7.77.5"
    artifactory_uid: 1030
    artifactory_gid: 1030

  roles:
   - jfrog 