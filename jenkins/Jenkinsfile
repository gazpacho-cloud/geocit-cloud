/* groovylint-disable CompileStatic, DuplicateStringLiteral, LineLength */
pipeline {
    agent any
    environment {
        TOKEN = credentials('telegramToken')
        CHAT_ID = credentials('telegramChatId')
        //ANSIBLE_VAULT_PASSWORD_FILE = credentials('ansible-vault-password')
        GOOGLE_APPLICATION_CREDENTIALS = credentials('gcp-service-account')
        WORKING_DIR = "./ansible"
    }
    stages {
        stage('Ansible') {
            steps {
                echo 'Ansible'
                dir("${WORKING_DIR}") {
                        //sh 'ansible-playbook playbook.yml -i inventory.ini --vault-password-file ${ANSIBLE_VAULT_PASSWORD_FILE} --user wushatneen --key-file /home/wushatneen/.ssh/id_rsa'
                    ansiblePlaybook playbook: 'playbook.yml', inventory: 'inventory.ini', credentialsId: 'ansible-user',/*vaultCredentialsId: 'ansible-vault-password' ,*/ extras: '--ssh-extra-args="-o StrictHostKeyChecking=no"'            
                }
            }
        }
    }
    post {
        always {
            cleanWs()
        }
        success {
            script{
                sh "curl --location --request POST 'https://api.telegram.org/bot${TOKEN}/sendMessage' --form text='Build ${env.JOB_NAME} is successful:\n ${env.BUILD_URL}' --form chat_id='${CHAT_ID}'"
            }
        }
        failure {
            script{
                sh "curl --location --request POST 'https://api.telegram.org/bot${TOKEN}/sendMessage' --form text='Build ${env.JOB_NAME} failed:\n ${env.BUILD_URL}' --form chat_id='${CHAT_ID}'"
            }
    }
}