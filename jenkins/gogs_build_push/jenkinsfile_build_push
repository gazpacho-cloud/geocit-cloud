pipeline {
    agent any
     tools {
		jfrog 'jfrog-cli'
        go 'go'
        dockerTool 'docker'
	}
    parameters {
        string(name: 'BUILDNAME', defaultValue: 'gogs', description: 'Build Name')
    }
    environment {
        ARTIFACTORY_URL = 'http://34.118.16.16:8082/artifactory'
        TOKEN = credentials('telegramToken')
        CHAT_ID = credentials('telegramChatId')
    }
    stages {
        stage('Checkout') {
             steps {
                script {
                    git branch: 'GEO-28-GOGS-build-and-push-to-dockerhub', url: 'https://github.com/gazpacho-cloud/geocit-cloud-infrastructure'
                }
            }
        }
        stage('Docker Build') {
            steps {
                script {
                    sh """
                    git clone https://github.com/gogs/gogs.git gogs
                    cd gogs
                    go build -o gogs
                    pwd
                    echo ${params.BUILDNAME}
                    echo ${BUILD_NUMBER}

                    docker build -f /var/lib/jenkins/workspace/GOGS-docker-build-push/gogs/Dockerfile -t ${params.BUILDNAME}:${BUILD_NUMBER} .
                    ls -la
                    """
                }
            }
        }
    
    post {
        always {
            cleanWs()
            sh 'docker system prune -a -f'
            sh 'go clean -cache'
        }
        success {
            script{
                sh "curl --location --request POST 'https://api.telegram.org/bot${TOKEN}/sendMessage' --form text='Build ${env.JOB_NAME} is successful: ${env.BUILD_URL}' --form chat_id='${CHAT_ID}'"
            }
        }
        failure {
            script{
                sh "curl --location --request POST 'https://api.telegram.org/bot${TOKEN}/sendMessage' --form text='Build ${env.JOB_NAME} failed: ${env.BUILD_URL}' --form chat_id='${CHAT_ID}'"
            }
        }
    }       
}